//
//  PhotoCollectionModels.swift
//  STPhotoCollection-iOS
//
//  Created by Dimitri Strauneanu on 08/08/2017.
//  Copyright (c) 2017 Streetography. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import STPhotoCore

protocol PhotoCollectionInterface: NSObjectProtocol {
    func setImage(image: UIImage?)
}

public enum PhotoCollection {
    public struct Model {
        let entityModel: EntityModel
        let filterModel: FilterModel
        var geoEntity: GeoEntity?
        
        init(entityModel: EntityModel, filterModel: FilterModel) {
            self.entityModel = entityModel
            self.filterModel = filterModel
        }
    }
    
    struct EntityModel {
        var location: STLocation
        var level: EntityLevel
    }
    
    struct FilterModel {
        let userId: String?
        let collectionId: String?
    }
    
    struct PaginationModel {
        var isFetchingItems: Bool = false
        var noMoreItems: Bool = false
        var noItems: Bool = false
        var limit: Int = 30
        var currentPage: Int = 0
        
        mutating func incrementCurrentPage() {
            self.currentPage += 1
        }
    }
    
    class DisplayedPhoto {
        var id: String
        var imageUrl: String?
        var backgroundImageColor: UIColor?
        
        weak var interface: PhotoCollectionInterface?
        
        init(id: String) {
            self.id = id
        }
        
        func setImage(image: UIImage?) {
            self.interface?.setImage(image: image)
        }
    }
    
    enum FetchPhotos {
        struct Response {
            let photos: [STPhoto]
            let photoSize: CGSize
        }
        
        struct ViewModel {
            let displayedPhotos: [DisplayedPhoto]
        }
    }
    
    enum PresentEntityDetails {
        struct Response {
            let name: String?
            let level: EntityLevel?
        }
        
        struct ViewModel {
            let title: String?
            let imageName: String?
        }
    }
    
    enum PresentPhoto {
        struct Request {
            let photoId: String?
        }
    }
    
    enum PresentPhotoDetail {
        struct Response {
            let photo: STPhoto
        }
        
        struct ViewModel {
            let photo: STPhoto
        }
    }
    
    enum DownloadPhoto {
        struct Request {
            let displayedPhoto: DisplayedPhoto?
        }
    }
}
