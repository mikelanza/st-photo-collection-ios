//
//  STPhotoCollectionModels.swift
//  STPhotoCollection-iOS
//
//  Created by Dimitri Strauneanu on 08/08/2017.
//  Copyright (c) 2017 Streetography. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import STPhotoCore

public enum STPhotoCollection {
    public struct Model {
        let entityModel: EntityModel
        let filterModel: FilterModel
        var geoEntity: GeoEntity?
        
        public init(entityModel: EntityModel, filterModel: FilterModel) {
            self.entityModel = entityModel
            self.filterModel = filterModel
        }
    }
    
    struct Section {
        var title: String?
        var items: [Any]
        var isLoading: Bool = false
        var noMoreItems: Bool = false
        var noItems: Bool = false
        
        init(title: String?, items: [Any]) {
            self.title = title
            self.items = items
        }
    }
    
    enum SectionIndex: Int {
        case photos = 0
    }
    
    public struct EntityModel {
        var location: STLocation
        var level: EntityLevel
        
        public init(location: STLocation, level: EntityLevel) {
            self.location = location
            self.level = level
        }
    }
    
    public struct FilterModel {
        let userId: String?
        let collectionId: String?
        
        public init(userId: String?, collectionId: String?) {
            self.userId = userId
            self.collectionId = collectionId
        }
    }
    
    struct PaginationModel {
        var isFetchingItems: Bool = false
        var noMoreItems: Bool = false
        var noItems: Bool = false
        var limit: Int = 30
        var currentPage: Int = 0
        
        mutating func incrementCurrentPage() {
            self.currentPage += 1
        }
    }
    
    class DisplayedPhoto {
        var id: String
        var imageUrl: String?
        var image: UIImage?
        var isLoadingImage: Bool
        var backgroundImageColor: UIColor?
        
        weak var photoCollectionViewCellInterface: STPhotoCollectionViewCellInterface?
        
        init(id: String) {
            self.id = id
            self.isLoadingImage = false
        }
    }
    
    enum FetchPhotos {
        struct Response {
            let photos: [STPhoto]
            let photoSize: CGSize
        }
        
        struct ViewModel {
            let displayedPhotos: [DisplayedPhoto]
        }
    }
    
    enum PresentEntityDetails {
        struct Response {
            let name: String?
            let level: EntityLevel?
        }
        
        struct ViewModel {
            let title: String?
            let imageName: String?
        }
    }
    
    enum PresentPhoto {
        struct Request {
            let photoId: String?
        }
    }
    
    enum PresentPhotoDetail {
        struct Response {
            let photoId: String
        }
        
        struct ViewModel {
            let photoId: String
        }
    }
    
    enum FetchImage {
        struct Request {
            let displayedPhoto: DisplayedPhoto
        }
        struct Response {
            let displayedPhoto: DisplayedPhoto
             let image: UIImage?
        }
        struct ViewModel {
            let displayedPhoto: DisplayedPhoto
             let image: UIImage?
        }
    }
}
